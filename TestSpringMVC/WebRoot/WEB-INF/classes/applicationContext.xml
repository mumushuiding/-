<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd     
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.2.xsd
        http://mybatis.org/schema/mybatis-spring
        http://mybatis.org/schema/mybatis-spring.xsd
	                    ">
	<!-- 会将目标包里的所有接口当作mapper配置，之后可以自动引入mapper类==== -->
	<mybatis:scan base-package="com.crm.mapper"/>
	<!-- 扫描目标包下面的Java文件，有spring相关注解的类，则把这些类注册为spring的bean -->
	<context:component-scan base-package="com.crm"></context:component-scan>
	<!-- 使用propertyOverrideConfigurer后处理器加载数据源参数 -->
	<context:property-override location="classpath:datasource.properties"></context:property-override>
    <!-- 配置c3p0数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"></bean>
    <!-- 配置sqlSessionFactory是Mybatis用于整合spring的bean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" p:dataSource-ref="dataSource"></bean>
    
</beans>
