<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
  <!-- 引入外部properties文件 -->
  <properties resource="datasource.properties"></properties>
    <settings>
	  <!-- 开启二级缓存 -->
	  <setting name="cacheEnabled" value="true"/>
	  <!-- 延迟加载的全局开关。当开启时，所有关联对象都会延迟加载 -->
	  <setting name="lazyLoadingEnabled" value="true"/>
	  <!-- 属性为true时，会使带有延迟加载属性的对象立即加载，反之每种属性会按需加载 -->
	  <setting name="aggressiveLazyLoading" value="false"/>
	  <!-- 是否允许单一语句返回多结果集（需要兼容驱动） -->
	  <setting name="multipleResultSetsEnabled" value="true"/>
	  <!-- 使用列标签代替列名 -->
	  <setting name="useColumnLabel" value="true"/>
	  <!-- 允许 JDBC 支持自动生成主键 -->
	  <setting name="useGeneratedKeys" value="false"/>
	  <!-- NONE 表示取消自动映射；PARTIAL 只会自动映射没有定义嵌套结果集映射的结果集。 FULL 会自动映射任意复杂的结果集（无论是否嵌套）。 -->
	  <setting name="autoMappingBehavior" value="PARTIAL"/>
	  <!-- 指定发现自动映射目标未知列（或者未知属性类型）的行为。NONE: 不做任何反应  WARNING: 输出提醒日志  FAILING: 映射失败 (抛出 SqlSessionException)-->
	  <setting name="autoMappingUnknownColumnBehavior" value="WARNING"/>
	  <!-- 配置默认的执行器。SIMPLE 就是普通的执行器；REUSE 执行器会重用预处理语句（prepared statements）； BATCH 执行器将重用语句并执行批量更新 -->
	  <setting name="defaultExecutorType" value="SIMPLE"/>
	  <!-- 	设置超时时间，它决定驱动等待数据库响应的秒数 -->
	  <setting name="defaultStatementTimeout" value="25"/>
	  <!-- 为驱动的结果集获取数量（fetchSize）设置一个提示值。 -->
	  <setting name="defaultFetchSize" value="100"/>
	  <!-- 允许在嵌套语句中使用分页（RowBounds）。如果允许使用则设置为false。 -->
	  <setting name="safeRowBoundsEnabled" value="false"/>
	  <setting name="mapUnderscoreToCamelCase" value="false"/>
	  <!-- 	MyBatis 利用本地缓存机制（Local Cache）防止循环引用（circular references）和加速重复嵌套查询。 默认值为 SESSION，这种情况下会缓存一个会话中执行的所有查询。 若设置值为 STATEMENT，本地会话仅用在语句执行上，对相同 SqlSession 的不同调用将不会共享数据。 -->
	  <setting name="localCacheScope" value="SESSION"/>
	  <setting name="jdbcTypeForNull" value="OTHER"/>
	  <!-- 指定哪个对象的方法触发一次延迟加载。 -->
	  <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>
 </settings>
 <typeAliases>
 <!-- 每一个在包 com.crm.pojos 中的 Java Bean，在没有注解的情况下，会使用 Bean 的首字母小写的非限定类名来作为它的别名。 比如 com.crm.pojos.User 的别名为 user；若有注解，则别名为其注解值。看下面的例子： -->
   
   <package name="com.crm.pojos"/>
 </typeAliases>
  <environments default="mysql">
    <environment id="mysql">
    <!-- 指定事务管理类型，type="JDBC"批直接简单使用了JDBC的提交和回滚设置 -->
      <transactionManager type="JDBC" />
      <dataSource type="POOLED">
        <property name="driver" value="${db.driver}" />
        <property name="url" value="${db.url}" />
        <property name="username" value="${db.username}" />
        <property name="password" value="${db.password}" />
        <!-- 在任意时间可以存在的活动（也就是正在使用）连接数量，默认值：10 -->
        <property name="poolMaximumActiveConnections" value="${db.maxpoolsize}"/>
        <!--  – 任意时间可能存在的空闲连接数。 -->
        <property name="poolMaximumIdleConnections" value="${db.minpoolsize}"/>


      </dataSource>
    </environment>
  </environments>
  
  <mappers>
    <mapper resource="com/crm/mapper/UserMapper.xml" />
  </mappers>

</configuration>